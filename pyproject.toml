[build-system]
requires = [
    "setuptools>=61.2",
]
build-backend = "setuptools.build_meta"


[project]
name = "chevah-compat"
version = "1.3.0"
maintainers = [
    { name = "Adi Roiban", email = "adi.roiban@proatria.com" },
]
description = "Helpers for running Python code on many OSes."
readme = "README.rst"
requires-python = "~=3.8"

# The runtime dependencies should be relaxed as otherwise it will
# generate conflicts with the code using chevah-compat.
dependencies = [
    "zope.interface >= 5.4.0",
    "pywin32 >= 305 ; platform_system == 'Windows'",
    "python-pam >= 2.0.2 ; platform_system == 'Linux'",
    # Used to detect Linux distributions.
    "distro >= 1.6.0",
]


[project.license]
text = "BSD"


[project.urls]
Homepage = "https://github.com/chevah/compat"


[project.optional-dependencies]
# These are the deps required to develop.
# Try to pin them as much as possible.
dev = [
    "ruff ~= 0.7",
    "bunch",
    "Twisted==24.10.0",
    "incremental",
    "service-identity==24.2.0",
    "pynose == 1.5.3",
    "pytest ~= 8.3",
    "coverage ~= 7.5",
    "diff_cover == 9.2.1",
    "codecov == 2.1.12",
    # Required for showing OpenSSL version in test_ci.
    "pyOpenSSL",
    #  Required for some unicode handling.
    "unidecode",
    "wmi ~= 1.5.1; platform_system == 'Windows'",
]


[project.entry-points."nose.plugins.0.10"]
memory-usage = "chevah_compat.testing.nose_memory_usage:MemoryUsage"
test-time = "chevah_compat.testing.nose_test_timer:TestTimer"
run-reporter = "chevah_compat.testing.nose_run_reporter:RunReporter"
randomly = "chevah_compat.testing.nose_randomly:RandomlyPlugin"


[tool.setuptools]
platforms = [
    "any",
]
include-package-data = false


[tool.setuptools.package-dir]
"" = "src"


[tool.setuptools.packages.find]
where = [
    "src",
]
namespaces = false


[tool.distutils.bdist_wheel]
universal = 0


# See ruff settings at https://docs.astral.sh/ruff/settings/
[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "build-py3",
    "dist",
    "node_modules",
    "site-packages",
]

# Same as Black.
line-length = 80
indent-width = 4

target-version = "py311"

[tool.ruff.lint]

# Still to enable
# ANN flake8-annotations
# ARG flake8-unused-arguments
# B flake8-bugbear
# C90 mccabe
# CPY flake8-copyright - needs preview features
# D pydocstyle
# DTZ flake8-datetimez - need to fix datetime usage
# G flake8-logging-format
# INT flake8-gettext
# N pep8-naming - poor support for interfaces
# PL Pylint
# PT flake8-pytest-style
# PTH flake8-use-pathlib
# Q flake8-quotes
# RET flake8-return
# S flake8-bandit
# SIM flake8-simplify
# SLF flake8-self - check private member access
# TCH flake8-type-checking
select = [
    "A",
    "AIR",
    "ASYNC",
    "BLE",
    "C4",
    "COM",
    "E", "W",
    "EXE",
    "ERA",
    "F",
    "FA",
    "FLY",
    "FURB",
    "I",
    "ICN",
    "INP",
    "ISC",
    "LOG",
    "PERF",
    "PGH",
    "PIE",
    "RET",
    "RUF",
    "PYI",
    "RSE",
    "SLOT",
    "T10",
    "T20",
    "TD",
    "TID",
    "TRY",
    "YTT",
    "UP",
    ]
ignore = [
    "BLE001",
    "COM812",
    "ISC001",
    # TODO: Update code to disable ruff rules.
    # https://github.com/chevah/compat/issues/701
    "RUF005",  # List concatenation
    "RUF012",  # Class mutable attributes
    "TRY003",
    "TD002",  # We don't use authors tag for todos.
    ]

external = [
    "cover",  # Our custom marker for coverage.
    ]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "lf"
docstring-code-format = false
docstring-code-line-length = "dynamic"
