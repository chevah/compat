#
# GitHub actions to test chevah-compat under Docker.
#


name: Docker


on:
  push:
    branches: [ master ]
    paths:
    - '**.py'
  pull_request:
    branches: [ master ]
    paths:
    - '**.py'


concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true


env:
  CHEVAH_REPO: compat
  USER: chevah
  CHEVAH_CONTAINER: yes


jobs:

  standard:

    name: ${{ matrix.container }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        container:
          - alpine:3.14
          - amazonlinux:2018.03
          - amazonlinux:2
          - amazonlinux:2022
          # CentOS 5.11 setup was saved as an image pushed to Docker Hub. See
          # the Overview section at https://hub.docker.com/r/proatria/centos.
          - proatria/centos:5.11-chevah1
          - centos:6.10
          - centos:7
          - centos:8.2.2004
          - oraclelinux:8
          - ubuntu:14.04
          - ubuntu:16.04
          - ubuntu:22.04

    # ubuntu-latest is GitHub's newest well-suported Linux distro.
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # On Alpine, OpenSSL must be updated to latest version for python-package.
    - name: Alpine setup
      if: startsWith(matrix.container, 'alpine')
      run: |
        apk upgrade -U
        apk add git bash shadow sudo curl

    # Final CentOS 5 version is used to build the generic Linux package.
    - name: CentOS 5.11 setup
      if: matrix.container == 'centos:5.11'
      run: |
        sed -i s/^mirrorlist=/#mirrorlist=/ /etc/yum.repos.d/*.repo
        sed -i s@^#baseurl=http://mirror.centos.org/centos/\$releasever/@baseurl=http://vault.centos.org/5.11/@ /etc/yum.repos.d/*.repo
        yum -y upgrade
        # Use https://bin.chevah.com:20443/third-party-stuff/centos5/tuxad/
        # when tuxad.de dissapears, it has the minimum required stuff.
        rpm -i http://www.tuxad.de/rpms/tuxad-release-5-1.noarch.rpm
        yum -y install wget curl gcc44 make m4 automake libtool patch sudo which openssh-clients
        ln -s /usr/bin/gcc44 /usr/local/bin/gcc
        wget --mirror --no-parent https://bin.chevah.com:20443/third-party-stuff/centos5/endpoint/
        cd bin.chevah.com\:20443/third-party-stuff/centos5/endpoint/
        rpm -i local-perl-*.rpm
        rpm -i --nodeps git{-core,}-2.5.0-1.ep.x86_64.rpm

    - name: CentOS 6.10 setup
      if: matrix.container == 'centos:6.10'
      run: |
        sed -i s/^mirrorlist=/#mirrorlist=/ /etc/yum.repos.d/*.repo
        sed -i s@^#baseurl=http://mirror.centos.org/centos/\$releasever/@baseurl=http://vault.centos.org/6.10/@ /etc/yum.repos.d/*.repo
        yum -y upgrade

    # OpenSSL got updated in 8.3 from 1.1.1c to 1.1.1g.
    - name: CentOS 8.2 setup
      if: matrix.container == 'centos:8.2.2004'
      run: |
        sed -i s/^mirrorlist=/#mirrorlist=/ /etc/yum.repos.d/*.repo
        sed -i s@^#baseurl=http://mirror.centos.org/\$contentdir/\$releasever/@baseurl=https://vault.centos.org/8.2.2004/@ /etc/yum.repos.d/*.repo
        yum -y upgrade

    - name: Amazon Linux 2022 setup
      if: matrix.container == 'amazonlinux:2022'
      run: yum -y install libxcrypt-compat

    - name: Yum-based setup
      if: startsWith(matrix.container, 'centos') || startsWith(matrix.container, 'amazon') || startsWith(matrix.container, 'oracle')
      run: yum -y install git tar which sudo

    - name: Ubuntu setup
      if: startsWith(matrix.container, 'ubuntu')
      run: |
        apt-get update
        apt-get dist-upgrade -y
        apt-get install -y git curl sudo

    # On a Docker container, everything runs as root by default.
    - name: Chevah user setup
      run: |
        useradd -g adm -s /bin/bash -m chevah
        echo '%adm    ALL=NOPASSWD: ALL' > /etc/sudoers

    # GHA's checkout action fails on CentOS 5/6, issue same commands manually.
    # This fails when opening a new PR, but works starting with second commit.
    - name: Clone sources independently
      run: |
        cd /home/chevah/
        git init $CHEVAH_REPO
        cd $CHEVAH_REPO
        # Cleanup the repo.
        git rev-parse --symbolic-full-name --verify --quiet HEAD || true
        git rev-parse --symbolic-full-name --branches || true
        git remote remove origin || true
        # Update repo token.
        git remote add origin https://github.com/chevah/$CHEVAH_REPO
        git fetch --no-tags --prune origin
        # Prepare the code.
        git clean -f
        git reset --hard ${{ github.event.after }}
        git log -1 --format='%H'

    # The old curl on CentOS 5 has cert check issues with GitHub's SNI.
    # Also with Let's Encrypt certificates, lately.
    # So download the runtime over HTTP from backup server.
    - name: CentOS 5 BINARY_DIST_URI hack
      if: startsWith(matrix.container, 'proatria/centos:5.11')
      run: |
        sed -i s@^#BINARY_DIST_URI=\'https://bin.chevah.com:20443/production\'@BINARY_DIST_URI=\'http://bin.chevah.com:20080/production\'@ /home/chevah/$CHEVAH_REPO/pythia.conf

    # This action also fails on CentOS 5/6.
    - name: Cache build
      uses: actions/cache@v2
      if: matrix.container != 'proatria/centos:5.11-chevah1' && matrix.container != 'centos:6.10'
      with:
        path: |
          /home/chevah/$CHEVAH_REPO/build-$CHEVAH_REPO
        key: ${{ runner.os }}-${{ hashFiles('pavement.py') }}-${{ hashFiles('pythia.conf') }}-${{ matrix.container }}

    - name: Deps
      run: |
        cd /home/chevah/$CHEVAH_REPO
        ./pythia.sh deps
        chown -R chevah .

    - uses: chevah/python-info-action@v1
      with:
        python-path: /home/chevah/$CHEVAH_REPO/build-$CHEVAH_REPO/bin/python

    - name: Build
      run: |
        cd /home/chevah/$CHEVAH_REPO
        su chevah -c "./pythia.sh build"

    - name: Test
      run: |
        cd /home/chevah/$CHEVAH_REPO
        su chevah -c "./pythia.sh test_ci2"
